{"knowledges": [{"speaker": "Monica", "tokens": [{"index": 1, "word": "How", "originalText": "How", "lemma": "how", "characterOffsetBegin": 0, "characterOffsetEnd": 3, "pos": "WRB", "before": "", "after": " "}, {"index": 2, "word": "would", "originalText": "would", "lemma": "would", "characterOffsetBegin": 4, "characterOffsetEnd": 9, "pos": "MD", "before": " ", "after": " "}, {"index": 3, "word": "you", "originalText": "you", "lemma": "you", "characterOffsetBegin": 10, "characterOffsetEnd": 13, "pos": "PRP", "before": " ", "after": " "}, {"index": 4, "word": "like", "originalText": "like", "lemma": "like", "characterOffsetBegin": 14, "characterOffsetEnd": 18, "pos": "VB", "before": " ", "after": " "}, {"index": 5, "word": "some", "originalText": "some", "lemma": "some", "characterOffsetBegin": 19, "characterOffsetEnd": 23, "pos": "DT", "before": " ", "after": " "}, {"index": 6, "word": "Tiki", "originalText": "Tiki", "lemma": "Tiki", "characterOffsetBegin": 24, "characterOffsetEnd": 28, "pos": "NNP", "before": " ", "after": " "}, {"index": 7, "word": "Death", "originalText": "Death", "lemma": "Death", "characterOffsetBegin": 29, "characterOffsetEnd": 34, "pos": "NNP", "before": " ", "after": " "}, {"index": 8, "word": "Punch", "originalText": "Punch", "lemma": "Punch", "characterOffsetBegin": 35, "characterOffsetEnd": 40, "pos": "NNP", "before": " ", "after": ""}, {"index": 9, "word": "?", "originalText": "?", "lemma": "?", "characterOffsetBegin": 40, "characterOffsetEnd": 41, "pos": ".", "before": "", "after": ""}], "ext_links": {"frame": ["like", "Experiencer_focus"], "synsets": [{"lemma": "like", "synset": "Synset('wish.v.02')", "definition": "prefer or wish to do something", "lemma_names": ["wish", "care", "like"], "_examples": ["Do you care to try this dish?", "Would you like to come along to the movies?"]}, {"lemma": "like", "synset": "Synset('like.v.02')", "definition": "find enjoyable or agreeable", "lemma_names": ["like"], "_examples": ["I like jogging", "She likes to read Russian novels"]}, {"lemma": "like", "synset": "Synset('like.v.03')", "definition": "be fond of", "lemma_names": ["like"], "_examples": ["I like my nephews"]}, {"lemma": "like", "synset": "Synset('like.v.04')", "definition": "feel about or towards; consider, evaluate, or regard", "lemma_names": ["like"], "_examples": ["How did you like the President's speech last night?"]}, {"lemma": "like", "synset": "Synset('like.v.05')", "definition": "want to have", "lemma_names": ["like"], "_examples": ["I'd like a beer now!"]}]}, "characters": ["", "", "Rachel", "", "", "", "", "", ""], "sid": "0-2", "origin_sent": "How would you like some Tiki Death Punch?", "triple": {"sbj": "Rachel", "rel": "like", "obj": "Tiki Death Punch"}, "intention": ["How", "would", "some", "?"]}, {"speaker": "Monica", "tokens": [{"index": 1, "word": "We", "originalText": "We", "lemma": "we", "characterOffsetBegin": 0, "characterOffsetEnd": 2, "pos": "PRP", "before": "", "after": " "}, {"index": 2, "word": "thought", "originalText": "thought", "lemma": "think", "characterOffsetBegin": 3, "characterOffsetEnd": 10, "pos": "VBD", "before": " ", "after": " "}, {"index": 3, "word": "since", "originalText": "since", "lemma": "since", "characterOffsetBegin": 11, "characterOffsetEnd": 16, "pos": "IN", "before": " ", "after": " "}, {"index": 4, "word": "Phoebe", "originalText": "Phoebe", "lemma": "Phoebe", "characterOffsetBegin": 17, "characterOffsetEnd": 23, "pos": "NNP", "before": " ", "after": " "}, {"index": 5, "word": "was", "originalText": "was", "lemma": "be", "characterOffsetBegin": 24, "characterOffsetEnd": 27, "pos": "VBD", "before": " ", "after": " "}, {"index": 6, "word": "staying", "originalText": "staying", "lemma": "stay", "characterOffsetBegin": 28, "characterOffsetEnd": 35, "pos": "VBG", "before": " ", "after": " "}, {"index": 7, "word": "over", "originalText": "over", "lemma": "over", "characterOffsetBegin": 36, "characterOffsetEnd": 40, "pos": "IN", "before": " ", "after": " "}, {"index": 8, "word": "tonight", "originalText": "tonight", "lemma": "tonight", "characterOffsetBegin": 41, "characterOffsetEnd": 48, "pos": "NN", "before": " ", "after": " "}, {"index": 9, "word": "we", "originalText": "we", "lemma": "we", "characterOffsetBegin": 49, "characterOffsetEnd": 51, "pos": "PRP", "before": " ", "after": ""}, {"index": 10, "word": "'d", "originalText": "'d", "lemma": "would", "characterOffsetBegin": 51, "characterOffsetEnd": 53, "pos": "MD", "before": "", "after": " "}, {"index": 11, "word": "have", "originalText": "have", "lemma": "have", "characterOffsetBegin": 54, "characterOffsetEnd": 58, "pos": "VB", "before": " ", "after": " "}, {"index": 12, "word": "kinda", "originalText": "kinda", "lemma": "kinda", "characterOffsetBegin": 59, "characterOffsetEnd": 64, "pos": "NN", "before": " ", "after": " "}, {"index": 13, "word": "like", "originalText": "like", "lemma": "like", "characterOffsetBegin": 65, "characterOffsetEnd": 69, "pos": "IN", "before": " ", "after": " "}, {"index": 14, "word": "a", "originalText": "a", "lemma": "a", "characterOffsetBegin": 70, "characterOffsetEnd": 71, "pos": "DT", "before": " ", "after": " "}, {"index": 15, "word": "slumber", "originalText": "slumber", "lemma": "slumber", "characterOffsetBegin": 72, "characterOffsetEnd": 79, "pos": "NN", "before": " ", "after": " "}, {"index": 16, "word": "party", "originalText": "party", "lemma": "party", "characterOffsetBegin": 80, "characterOffsetEnd": 85, "pos": "NN", "before": " ", "after": " "}, {"index": 17, "word": "thing", "originalText": "thing", "lemma": "thing", "characterOffsetBegin": 86, "characterOffsetEnd": 91, "pos": "NN", "before": " ", "after": ""}, {"index": 18, "word": ".", "originalText": ".", "lemma": ".", "characterOffsetBegin": 91, "characterOffsetEnd": 92, "pos": ".", "before": "", "after": ""}], "ext_links": {"frame": ["stay", "Residence", "State_continue", "Temporary_stay"], "synsets": [{"lemma": "stay", "synset": "Synset('stay.v.01')", "definition": "stay the same; remain in a certain state", "lemma_names": ["stay", "remain", "rest"], "_examples": ["The dress remained wet after repeated attempts to dry it", "rest assured", "stay alone", "He remained unmoved by her tears", "The bad weather continued for another week"]}, {"lemma": "stay", "synset": "Synset('stay.v.02')", "definition": "stay put (in a certain place); we are not moving to Cincinnati\"", "lemma_names": ["stay", "stick", "stick_around", "stay_put"], "_examples": ["We are staying in Detroit", "Stay put in the corner here!", "Stick around and you will learn something!"]}, {"lemma": "stay", "synset": "Synset('bide.v.01')", "definition": "dwell", "lemma_names": ["bide", "abide", "stay"], "_examples": ["You can stay with me while you are in town", "stay a bit longer--the day is still young"]}, {"lemma": "stay", "synset": "Synset('stay.v.04')", "definition": "continue in a place, position, or situation", "lemma_names": ["stay", "stay_on", "continue", "remain"], "_examples": ["After graduation, she stayed on in Cambridge as a student adviser", "Stay with me, please", "despite student protests, he remained Dean for another year", "She continued as deputy mayor for another year"]}, {"lemma": "stay", "synset": "Synset('stay.v.05')", "definition": "remain behind", "lemma_names": ["stay"], "_examples": ["I had to stay at home and watch the children"]}, {"lemma": "stay", "synset": "Synset('stay.v.06')", "definition": "stop or halt", "lemma_names": ["stay", "detain", "delay"], "_examples": ["Please stay the bloodshed!"]}, {"lemma": "stay", "synset": "Synset('persist.v.03')", "definition": "stay behind", "lemma_names": ["persist", "remain", "stay"], "_examples": ["The smell stayed in the room", "The hostility remained long after they made up"]}, {"lemma": "stay", "synset": "Synset('last_out.v.01')", "definition": "hang on during a trial of endurance", "lemma_names": ["last_out", "stay", "ride_out", "outride"], "_examples": ["ride out the storm"]}, {"lemma": "stay", "synset": "Synset('stay.v.09')", "definition": "stop a judicial process", "lemma_names": ["stay"], "_examples": ["The judge stayed the execution order"]}, {"lemma": "stay", "synset": "Synset('stay.v.10')", "definition": "fasten with stays", "lemma_names": ["stay"], "_examples": []}, {"lemma": "stay", "synset": "Synset('quell.v.02')", "definition": "overcome or allay", "lemma_names": ["quell", "stay", "appease"], "_examples": ["quell my hunger"]}]}, "characters": ["", "", "", "Phoebe", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], "sid": "2-1", "origin_sent": "We thought since Phoebe was staying over tonight we'd have kinda like a slumber party thing.", "triple": {"sbj": "Phoebe", "rel": "be stay over", "obj": "tonight"}, "intention": ["We", "thought", "since", "we", "'d", "have", "kinda", "like"]}, {"speaker": "Phoebe", "tokens": [{"index": 1, "word": "And", "originalText": "And", "lemma": "and", "characterOffsetBegin": 0, "characterOffsetEnd": 3, "pos": "CC", "before": "", "after": " "}, {"index": 2, "word": "I", "originalText": "I", "lemma": "I", "characterOffsetBegin": 4, "characterOffsetEnd": 5, "pos": "PRP", "before": " ", "after": " "}, {"index": 3, "word": "brought", "originalText": "brought", "lemma": "bring", "characterOffsetBegin": 6, "characterOffsetEnd": 13, "pos": "VBD", "before": " ", "after": " "}, {"index": 4, "word": "Operation", "originalText": "Operation", "lemma": "Operation", "characterOffsetBegin": 14, "characterOffsetEnd": 23, "pos": "NNP", "before": " ", "after": ""}, {"index": 5, "word": "!", "originalText": "!", "lemma": "!", "characterOffsetBegin": 23, "characterOffsetEnd": 24, "pos": ".", "before": "", "after": ""}], "ext_links": {"frame": ["bring", "Bringing", "Causation"], "synsets": [{"lemma": "bring", "synset": "Synset('bring.v.01')", "definition": "take something or somebody with oneself somewhere", "lemma_names": ["bring", "convey", "take"], "_examples": ["Bring me the box from the other room", "Take these letters to the boss", "This brings me to the main point"]}, {"lemma": "bring", "synset": "Synset('bring.v.02')", "definition": "cause to come into a particular state or condition", "lemma_names": ["bring"], "_examples": ["Long hard years of on the job training had brought them to their competence", "bring water to the boiling point"]}, {"lemma": "bring", "synset": "Synset('bring.v.03')", "definition": "cause to happen or to occur as a consequence", "lemma_names": ["bring", "work", "play", "wreak", "make_for"], "_examples": ["I cannot work a miracle", "wreak havoc", "bring comments", "play a joke", "The rain brought relief to the drought-stricken area"]}, {"lemma": "bring", "synset": "Synset('bring.v.04')", "definition": "go or come after and bring or take back", "lemma_names": ["bring", "get", "convey", "fetch"], "_examples": ["Get me those books over there, please", "Could you bring the wine?", "The dog fetched the hat"]}, {"lemma": "bring", "synset": "Synset('bring.v.05')", "definition": "bring into a different state", "lemma_names": ["bring", "land"], "_examples": ["this may land you in jail"]}, {"lemma": "bring", "synset": "Synset('bring.v.06')", "definition": "be accompanied by", "lemma_names": ["bring"], "_examples": ["Can I bring my cousin to the dinner?"]}, {"lemma": "bring", "synset": "Synset('institute.v.02')", "definition": "advance or set forth in court", "lemma_names": ["institute", "bring"], "_examples": ["bring charges\", \"institute proceedings"]}, {"lemma": "bring", "synset": "Synset('lend.v.01')", "definition": "bestow a quality on", "lemma_names": ["lend", "impart", "bestow", "contribute", "add", "bring"], "_examples": ["Her presence lends a certain cachet to the company", "The music added a lot to the play", "She brings a special atmosphere to our meetings", "This adds a light note to the program"]}, {"lemma": "bring", "synset": "Synset('fetch.v.02')", "definition": "be sold for a certain price", "lemma_names": ["fetch", "bring_in", "bring"], "_examples": ["The painting brought $10,000", "The old print fetched a high price at the auction"]}, {"lemma": "bring", "synset": "Synset('bring.v.10')", "definition": "attract the attention of", "lemma_names": ["bring"], "_examples": ["The noise and the screaming brought the curious"]}, {"lemma": "bring", "synset": "Synset('bring.v.11')", "definition": "induce or persuade", "lemma_names": ["bring"], "_examples": ["The confession of one of the accused brought the others to admit to the crime as well"]}]}, "characters": ["", "Phoebe", "", "", ""], "sid": "3-0", "origin_sent": "And I brought Operation!", "triple": {"sbj": "Phoebe", "rel": "bring", "obj": "Operation"}, "intention": ["And"]}, {"speaker": "Monica", "tokens": [{"index": 1, "word": "Could", "originalText": "Could", "lemma": "could", "characterOffsetBegin": 0, "characterOffsetEnd": 5, "pos": "MD", "before": "", "after": " "}, {"index": 2, "word": "you", "originalText": "you", "lemma": "you", "characterOffsetBegin": 6, "characterOffsetEnd": 9, "pos": "PRP", "before": " ", "after": " "}, {"index": 3, "word": "please", "originalText": "please", "lemma": "please", "characterOffsetBegin": 10, "characterOffsetEnd": 16, "pos": "VB", "before": " ", "after": " "}, {"index": 4, "word": "tell", "originalText": "tell", "lemma": "tell", "characterOffsetBegin": 17, "characterOffsetEnd": 21, "pos": "VB", "before": " ", "after": " "}, {"index": 5, "word": "me", "originalText": "me", "lemma": "I", "characterOffsetBegin": 22, "characterOffsetEnd": 24, "pos": "PRP", "before": " ", "after": " "}, {"index": 6, "word": "what", "originalText": "what", "lemma": "what", "characterOffsetBegin": 25, "characterOffsetEnd": 29, "pos": "WP", "before": " ", "after": " "}, {"index": 7, "word": "this", "originalText": "this", "lemma": "this", "characterOffsetBegin": 30, "characterOffsetEnd": 34, "pos": "DT", "before": " ", "after": " "}, {"index": 8, "word": "is", "originalText": "is", "lemma": "be", "characterOffsetBegin": 35, "characterOffsetEnd": 37, "pos": "VBZ", "before": " ", "after": " "}, {"index": 9, "word": "in", "originalText": "in", "lemma": "in", "characterOffsetBegin": 38, "characterOffsetEnd": 40, "pos": "IN", "before": " ", "after": " "}, {"index": 10, "word": "reference", "originalText": "reference", "lemma": "reference", "characterOffsetBegin": 41, "characterOffsetEnd": 50, "pos": "NN", "before": " ", "after": " "}, {"index": 11, "word": "to", "originalText": "to", "lemma": "to", "characterOffsetBegin": 51, "characterOffsetEnd": 53, "pos": "TO", "before": " ", "after": ""}, {"index": 12, "word": "?", "originalText": "?", "lemma": "?", "characterOffsetBegin": 53, "characterOffsetEnd": 54, "pos": ".", "before": "", "after": ""}], "ext_links": {"frame": ["tell", "Becoming_aware", "Evidence", "Prevarication", "Request", "Speak_on_topic", "Statement", "Telling"], "synsets": [{"lemma": "tell", "synset": "Synset('state.v.01')", "definition": "express in words", "lemma_names": ["state", "say", "tell"], "_examples": ["He said that he wanted to marry her", "tell me what is bothering you", "state your opinion", "state your name"]}, {"lemma": "tell", "synset": "Synset('tell.v.02')", "definition": "let something be known", "lemma_names": ["tell"], "_examples": ["Tell them that you will be late"]}, {"lemma": "tell", "synset": "Synset('tell.v.03')", "definition": "narrate or give a detailed account of", "lemma_names": ["tell", "narrate", "recount", "recite"], "_examples": ["Tell what happened", "The father told a story to his child"]}, {"lemma": "tell", "synset": "Synset('order.v.01')", "definition": "give instructions to or direct somebody to do something with authority", "lemma_names": ["order", "tell", "enjoin", "say"], "_examples": ["I said to him to go home", "She ordered him to do the shopping", "The mother told the child to get dressed"]}, {"lemma": "tell", "synset": "Synset('tell.v.05')", "definition": "discern or comprehend", "lemma_names": ["tell"], "_examples": ["He could tell that she was unhappy"]}, {"lemma": "tell", "synset": "Synset('assure.v.02')", "definition": "inform positively and with certainty and confidence", "lemma_names": ["assure", "tell"], "_examples": ["I tell you that man is a crook!"]}, {"lemma": "tell", "synset": "Synset('tell.v.07')", "definition": "give evidence", "lemma_names": ["tell", "evidence"], "_examples": ["he was telling on all his former colleague"]}, {"lemma": "tell", "synset": "Synset('distinguish.v.01')", "definition": "mark as different", "lemma_names": ["distinguish", "separate", "differentiate", "secern", "secernate", "severalize", "severalise", "tell", "tell_apart"], "_examples": ["We distinguish several kinds of maple"]}]}, "characters": ["", "", "", "", "Monica", "", "", "", "", "", "", ""], "sid": "6-0", "origin_sent": "Could you please tell me what this is in reference to?", "triple": {"sbj": "you", "rel": "tell", "obj": "Monica"}, "intention": ["Could", "please", "what", "this", "is", "in", "reference"]}, {"speaker": "Monica", "tokens": [{"index": 1, "word": "Look", "originalText": "Look", "lemma": "look", "characterOffsetBegin": 0, "characterOffsetEnd": 4, "pos": "VB", "before": "", "after": ""}, {"index": 2, "word": ",", "originalText": ",", "lemma": ",", "characterOffsetBegin": 4, "characterOffsetEnd": 5, "pos": ",", "before": "", "after": " "}, {"index": 3, "word": "they", "originalText": "they", "lemma": "they", "characterOffsetBegin": 6, "characterOffsetEnd": 10, "pos": "PRP", "before": " ", "after": " "}, {"index": 4, "word": "just", "originalText": "just", "lemma": "just", "characterOffsetBegin": 11, "characterOffsetEnd": 15, "pos": "RB", "before": " ", "after": " "}, {"index": 5, "word": "wan", "originalText": "wan", "lemma": "wan", "characterOffsetBegin": 16, "characterOffsetEnd": 19, "pos": "VBP", "before": " ", "after": ""}, {"index": 6, "word": "na", "originalText": "na", "lemma": "na", "characterOffsetBegin": 19, "characterOffsetEnd": 21, "pos": "TO", "before": "", "after": " "}, {"index": 7, "word": "see", "originalText": "see", "lemma": "see", "characterOffsetBegin": 22, "characterOffsetEnd": 25, "pos": "VB", "before": " ", "after": " "}, {"index": 8, "word": "if", "originalText": "if", "lemma": "if", "characterOffsetBegin": 26, "characterOffsetEnd": 28, "pos": "IN", "before": " ", "after": " "}, {"index": 9, "word": "you", "originalText": "you", "lemma": "you", "characterOffsetBegin": 29, "characterOffsetEnd": 32, "pos": "PRP", "before": " ", "after": ""}, {"index": 10, "word": "'re", "originalText": "'re", "lemma": "be", "characterOffsetBegin": 32, "characterOffsetEnd": 35, "pos": "VBP", "before": "", "after": " "}, {"index": 11, "word": "okay", "originalText": "okay", "lemma": "okay", "characterOffsetBegin": 36, "characterOffsetEnd": 40, "pos": "JJ", "before": " ", "after": ""}, {"index": 12, "word": ".", "originalText": ".", "lemma": ".", "characterOffsetBegin": 40, "characterOffsetEnd": 41, "pos": ".", "before": "", "after": ""}], "ext_links": {"frame": ["be", "Performers_and_roles"], "synsets": [{"lemma": "be", "synset": "Synset('be.v.01')", "definition": "have the quality of being; (copula, used with an adjective or a predicate noun)", "lemma_names": ["be"], "_examples": ["John is rich", "This is not a good answer"]}, {"lemma": "be", "synset": "Synset('be.v.02')", "definition": "be identical to; be someone or something", "lemma_names": ["be"], "_examples": ["The president of the company is John Smith", "This is my house"]}, {"lemma": "be", "synset": "Synset('be.v.03')", "definition": "occupy a certain position or area; be somewhere", "lemma_names": ["be"], "_examples": ["Where is my umbrella?\" \"The toolshed is in the back", "What is behind this behavior?"]}, {"lemma": "be", "synset": "Synset('exist.v.01')", "definition": "have an existence, be extant", "lemma_names": ["exist", "be"], "_examples": ["Is there a God?"]}, {"lemma": "be", "synset": "Synset('be.v.05')", "definition": "happen, occur, take place; this was during the visit to my parents' house\"", "lemma_names": ["be"], "_examples": ["I lost my wallet", "There were two hundred people at his funeral", "There was a lot of noise in the kitchen"]}, {"lemma": "be", "synset": "Synset('equal.v.01')", "definition": "be identical or equivalent to", "lemma_names": ["equal", "be"], "_examples": ["One dollar equals 1,000 rubles these days!"]}, {"lemma": "be", "synset": "Synset('constitute.v.01')", "definition": "form or compose", "lemma_names": ["constitute", "represent", "make_up", "comprise", "be"], "_examples": ["This money is my only income", "The stone wall was the backdrop for the performance", "These constitute my entire belonging", "The children made up the chorus", "This sum represents my entire income for a year", "These few men comprise his entire army"]}, {"lemma": "be", "synset": "Synset('be.v.08')", "definition": "work in a specific place, with a specific subject, or in a specific function", "lemma_names": ["be", "follow"], "_examples": ["He is a herpetologist", "She is our resident philosopher"]}, {"lemma": "be", "synset": "Synset('embody.v.02')", "definition": "represent, as of a character on stage", "lemma_names": ["embody", "be", "personify"], "_examples": ["Derek Jacobi was Hamlet"]}, {"lemma": "be", "synset": "Synset('be.v.10')", "definition": "spend or use time", "lemma_names": ["be"], "_examples": ["I may be an hour"]}, {"lemma": "be", "synset": "Synset('be.v.11')", "definition": "have life, be alive", "lemma_names": ["be", "live"], "_examples": ["Our great leader is no more", "My grandfather lived until the end of war"]}, {"lemma": "be", "synset": "Synset('be.v.12')", "definition": "to remain unmolested, undisturbed, or uninterrupted -- used only in infinitive form", "lemma_names": ["be"], "_examples": ["let her be"]}, {"lemma": "be", "synset": "Synset('cost.v.01')", "definition": "be priced at", "lemma_names": ["cost", "be"], "_examples": ["These shoes cost $100"]}]}, "characters": ["", "", "", "", "", "", "", "", "Rachel", "", "", ""], "sid": "8-1", "origin_sent": "Look, they just wanna see if you're okay.", "triple": {"sbj": "Rachel", "rel": "be", "obj": "okay"}, "intention": ["just", "wan", "na", "see", "if"]}, {"speaker": "Rachel", "tokens": [{"index": 1, "word": "They", "originalText": "They", "lemma": "they", "characterOffsetBegin": 0, "characterOffsetEnd": 4, "pos": "PRP", "before": "", "after": " "}, {"index": 2, "word": "wan", "originalText": "wan", "lemma": "wan", "characterOffsetBegin": 5, "characterOffsetEnd": 8, "pos": "VBP", "before": " ", "after": ""}, {"index": 3, "word": "na", "originalText": "na", "lemma": "na", "characterOffsetBegin": 8, "characterOffsetEnd": 10, "pos": "TO", "before": "", "after": " "}, {"index": 4, "word": "know", "originalText": "know", "lemma": "know", "characterOffsetBegin": 11, "characterOffsetEnd": 15, "pos": "VB", "before": " ", "after": " "}, {"index": 5, "word": "if", "originalText": "if", "lemma": "if", "characterOffsetBegin": 16, "characterOffsetEnd": 18, "pos": "IN", "before": " ", "after": " "}, {"index": 6, "word": "I", "originalText": "I", "lemma": "I", "characterOffsetBegin": 19, "characterOffsetEnd": 20, "pos": "PRP", "before": " ", "after": ""}, {"index": 7, "word": "'m", "originalText": "'m", "lemma": "be", "characterOffsetBegin": 20, "characterOffsetEnd": 22, "pos": "VBP", "before": "", "after": " "}, {"index": 8, "word": "okay", "originalText": "okay", "lemma": "okay", "characterOffsetBegin": 23, "characterOffsetEnd": 27, "pos": "JJ", "before": " ", "after": ""}, {"index": 9, "word": ".", "originalText": ".", "lemma": ".", "characterOffsetBegin": 27, "characterOffsetEnd": 28, "pos": ".", "before": "", "after": ""}], "ext_links": {"frame": ["be", "Performers_and_roles"], "synsets": [{"lemma": "be", "synset": "Synset('be.v.01')", "definition": "have the quality of being; (copula, used with an adjective or a predicate noun)", "lemma_names": ["be"], "_examples": ["John is rich", "This is not a good answer"]}, {"lemma": "be", "synset": "Synset('be.v.02')", "definition": "be identical to; be someone or something", "lemma_names": ["be"], "_examples": ["The president of the company is John Smith", "This is my house"]}, {"lemma": "be", "synset": "Synset('be.v.03')", "definition": "occupy a certain position or area; be somewhere", "lemma_names": ["be"], "_examples": ["Where is my umbrella?\" \"The toolshed is in the back", "What is behind this behavior?"]}, {"lemma": "be", "synset": "Synset('exist.v.01')", "definition": "have an existence, be extant", "lemma_names": ["exist", "be"], "_examples": ["Is there a God?"]}, {"lemma": "be", "synset": "Synset('be.v.05')", "definition": "happen, occur, take place; this was during the visit to my parents' house\"", "lemma_names": ["be"], "_examples": ["I lost my wallet", "There were two hundred people at his funeral", "There was a lot of noise in the kitchen"]}, {"lemma": "be", "synset": "Synset('equal.v.01')", "definition": "be identical or equivalent to", "lemma_names": ["equal", "be"], "_examples": ["One dollar equals 1,000 rubles these days!"]}, {"lemma": "be", "synset": "Synset('constitute.v.01')", "definition": "form or compose", "lemma_names": ["constitute", "represent", "make_up", "comprise", "be"], "_examples": ["This money is my only income", "The stone wall was the backdrop for the performance", "These constitute my entire belonging", "The children made up the chorus", "This sum represents my entire income for a year", "These few men comprise his entire army"]}, {"lemma": "be", "synset": "Synset('be.v.08')", "definition": "work in a specific place, with a specific subject, or in a specific function", "lemma_names": ["be", "follow"], "_examples": ["He is a herpetologist", "She is our resident philosopher"]}, {"lemma": "be", "synset": "Synset('embody.v.02')", "definition": "represent, as of a character on stage", "lemma_names": ["embody", "be", "personify"], "_examples": ["Derek Jacobi was Hamlet"]}, {"lemma": "be", "synset": "Synset('be.v.10')", "definition": "spend or use time", "lemma_names": ["be"], "_examples": ["I may be an hour"]}, {"lemma": "be", "synset": "Synset('be.v.11')", "definition": "have life, be alive", "lemma_names": ["be", "live"], "_examples": ["Our great leader is no more", "My grandfather lived until the end of war"]}, {"lemma": "be", "synset": "Synset('be.v.12')", "definition": "to remain unmolested, undisturbed, or uninterrupted -- used only in infinitive form", "lemma_names": ["be"], "_examples": ["let her be"]}, {"lemma": "be", "synset": "Synset('cost.v.01')", "definition": "be priced at", "lemma_names": ["cost", "be"], "_examples": ["These shoes cost $100"]}]}, "characters": ["", "", "", "", "", "Rachel", "", "", ""], "sid": "9-0", "origin_sent": "They wanna know if I'm okay.", "triple": {"sbj": "Rachel", "rel": "be", "obj": "okay"}, "intention": ["They", "wan", "na", "know", "if"]}, {"speaker": "Rachel", "tokens": [{"index": 1, "word": "Well", "originalText": "Well", "lemma": "well", "characterOffsetBegin": 0, "characterOffsetEnd": 4, "pos": "RB", "before": "", "after": ""}, {"index": 2, "word": ",", "originalText": ",", "lemma": ",", "characterOffsetBegin": 4, "characterOffsetEnd": 5, "pos": ",", "before": "", "after": " "}, {"index": 3, "word": "let", "originalText": "let", "lemma": "let", "characterOffsetBegin": 6, "characterOffsetEnd": 9, "pos": "VB", "before": " ", "after": ""}, {"index": 4, "word": "'s", "originalText": "'s", "lemma": "'s", "characterOffsetBegin": 9, "characterOffsetEnd": 11, "pos": "POS", "before": "", "after": " "}, {"index": 5, "word": "see", "originalText": "see", "lemma": "see", "characterOffsetBegin": 12, "characterOffsetEnd": 15, "pos": "VB", "before": " ", "after": ""}, {"index": 6, "word": ",", "originalText": ",", "lemma": ",", "characterOffsetBegin": 15, "characterOffsetEnd": 16, "pos": ",", "before": "", "after": " "}, {"index": 7, "word": "the", "originalText": "the", "lemma": "the", "characterOffsetBegin": 17, "characterOffsetEnd": 20, "pos": "DT", "before": " ", "after": " "}, {"index": 8, "word": "FICA", "originalText": "FICA", "lemma": "FICA", "characterOffsetBegin": 21, "characterOffsetEnd": 25, "pos": "NNP", "before": " ", "after": " "}, {"index": 9, "word": "guys", "originalText": "guys", "lemma": "guy", "characterOffsetBegin": 26, "characterOffsetEnd": 30, "pos": "NNS", "before": " ", "after": " "}, {"index": 10, "word": "took", "originalText": "took", "lemma": "take", "characterOffsetBegin": 31, "characterOffsetEnd": 35, "pos": "VBD", "before": " ", "after": " "}, {"index": 11, "word": "all", "originalText": "all", "lemma": "all", "characterOffsetBegin": 36, "characterOffsetEnd": 39, "pos": "DT", "before": " ", "after": " "}, {"index": 12, "word": "my", "originalText": "my", "lemma": "my", "characterOffsetBegin": 40, "characterOffsetEnd": 42, "pos": "PRP$", "before": " ", "after": " "}, {"index": 13, "word": "money", "originalText": "money", "lemma": "money", "characterOffsetBegin": 43, "characterOffsetEnd": 48, "pos": "NN", "before": " ", "after": ""}, {"index": 14, "word": ",", "originalText": ",", "lemma": ",", "characterOffsetBegin": 48, "characterOffsetEnd": 49, "pos": ",", "before": "", "after": " "}, {"index": 15, "word": "everyone", "originalText": "everyone", "lemma": "everyone", "characterOffsetBegin": 50, "characterOffsetEnd": 58, "pos": "NN", "before": " ", "after": " "}, {"index": 16, "word": "I", "originalText": "I", "lemma": "I", "characterOffsetBegin": 59, "characterOffsetEnd": 60, "pos": "PRP", "before": " ", "after": " "}, {"index": 17, "word": "know", "originalText": "know", "lemma": "know", "characterOffsetBegin": 61, "characterOffsetEnd": 65, "pos": "VBP", "before": " ", "after": " "}, {"index": 18, "word": "is", "originalText": "is", "lemma": "be", "characterOffsetBegin": 66, "characterOffsetEnd": 68, "pos": "VBZ", "before": " ", "after": " "}, {"index": 19, "word": "either", "originalText": "either", "lemma": "either", "characterOffsetBegin": 69, "characterOffsetEnd": 75, "pos": "CC", "before": " ", "after": " "}, {"index": 20, "word": "getting", "originalText": "getting", "lemma": "get", "characterOffsetBegin": 76, "characterOffsetEnd": 83, "pos": "VBG", "before": " ", "after": " "}, {"index": 21, "word": "married", "originalText": "married", "lemma": "married", "characterOffsetBegin": 84, "characterOffsetEnd": 91, "pos": "JJ", "before": " ", "after": ""}, {"index": 22, "word": ",", "originalText": ",", "lemma": ",", "characterOffsetBegin": 91, "characterOffsetEnd": 92, "pos": ",", "before": "", "after": " "}, {"index": 23, "word": "or", "originalText": "or", "lemma": "or", "characterOffsetBegin": 93, "characterOffsetEnd": 95, "pos": "CC", "before": " ", "after": " "}, {"index": 24, "word": "getting", "originalText": "getting", "lemma": "get", "characterOffsetBegin": 96, "characterOffsetEnd": 103, "pos": "VBG", "before": " ", "after": " "}, {"index": 25, "word": "promoted", "originalText": "promoted", "lemma": "promote", "characterOffsetBegin": 104, "characterOffsetEnd": 112, "pos": "VBN", "before": " ", "after": ""}, {"index": 26, "word": ",", "originalText": ",", "lemma": ",", "characterOffsetBegin": 112, "characterOffsetEnd": 113, "pos": ",", "before": "", "after": " "}, {"index": 27, "word": "or", "originalText": "or", "lemma": "or", "characterOffsetBegin": 114, "characterOffsetEnd": 116, "pos": "CC", "before": " ", "after": " "}, {"index": 28, "word": "getting", "originalText": "getting", "lemma": "get", "characterOffsetBegin": 117, "characterOffsetEnd": 124, "pos": "VBG", "before": " ", "after": " "}, {"index": 29, "word": "pregnant", "originalText": "pregnant", "lemma": "pregnant", "characterOffsetBegin": 125, "characterOffsetEnd": 133, "pos": "JJ", "before": " ", "after": ""}, {"index": 30, "word": ",", "originalText": ",", "lemma": ",", "characterOffsetBegin": 133, "characterOffsetEnd": 134, "pos": ",", "before": "", "after": " "}, {"index": 31, "word": "and", "originalText": "and", "lemma": "and", "characterOffsetBegin": 135, "characterOffsetEnd": 138, "pos": "CC", "before": " ", "after": " "}, {"index": 32, "word": "I", "originalText": "I", "lemma": "I", "characterOffsetBegin": 139, "characterOffsetEnd": 140, "pos": "PRP", "before": " ", "after": ""}, {"index": 33, "word": "'m", "originalText": "'m", "lemma": "be", "characterOffsetBegin": 140, "characterOffsetEnd": 142, "pos": "VBP", "before": "", "after": " "}, {"index": 34, "word": "getting", "originalText": "getting", "lemma": "get", "characterOffsetBegin": 143, "characterOffsetEnd": 150, "pos": "VBG", "before": " ", "after": " "}, {"index": 35, "word": "coffee", "originalText": "coffee", "lemma": "coffee", "characterOffsetBegin": 151, "characterOffsetEnd": 157, "pos": "NN", "before": " ", "after": ""}, {"index": 36, "word": "!", "originalText": "!", "lemma": "!", "characterOffsetBegin": 157, "characterOffsetEnd": 158, "pos": ".", "before": "", "after": ""}], "ext_links": {"frame": ["get", "Arriving", "Board_vehicle", "Bringing", "Come_down_with", "Disembarking", "Getting", "Giving_birth", "Grasp", "Intentional_deception", "Transition_to_state"], "synsets": [{"lemma": "get", "synset": "Synset('get.v.01')", "definition": "come into the possession of something concrete or abstract", "lemma_names": ["get", "acquire"], "_examples": ["She got a lot of paintings from her uncle", "They acquired a new pet", "Get your results the next day", "Get permission to take a few days off from work"]}, {"lemma": "get", "synset": "Synset('become.v.01')", "definition": "enter or assume a certain state or condition", "lemma_names": ["become", "go", "get"], "_examples": ["He became annoyed when he heard the bad news", "It must be getting more serious", "her face went red with anger", "She went into ecstasy", "Get going!"]}, {"lemma": "get", "synset": "Synset('get.v.03')", "definition": "cause to move; cause to be in a certain position or condition", "lemma_names": ["get", "let", "have"], "_examples": ["He got his squad on the ball", "This let me in for a big surprise", "He got a girl into trouble"]}, {"lemma": "get", "synset": "Synset('receive.v.02')", "definition": "receive a specified treatment (abstract)", "lemma_names": ["receive", "get", "find", "obtain", "incur"], "_examples": ["These aspects of civilization do not find expression or receive an interpretation", "His movie received a good review", "I got nothing but trouble for my good intentions"]}, {"lemma": "get", "synset": "Synset('arrive.v.01')", "definition": "reach a destination; arrive by movement or progress", "lemma_names": ["arrive", "get", "come"], "_examples": ["She arrived home at 7 o'clock", "She didn't get to Chicago until after midnight"]}, {"lemma": "get", "synset": "Synset('bring.v.04')", "definition": "go or come after and bring or take back", "lemma_names": ["bring", "get", "convey", "fetch"], "_examples": ["Get me those books over there, please", "Could you bring the wine?", "The dog fetched the hat"]}, {"lemma": "get", "synset": "Synset('experience.v.03')", "definition": "go through (mental or physical states or experiences)", "lemma_names": ["experience", "receive", "have", "get"], "_examples": ["get an idea", "experience vertigo", "get nauseous", "receive injuries", "have a feeling"]}, {"lemma": "get", "synset": "Synset('pay_back.v.02')", "definition": "take vengeance on or get even", "lemma_names": ["pay_back", "pay_off", "get", "fix"], "_examples": ["We'll get them!", "That'll fix him good!", "This time I got him"]}, {"lemma": "get", "synset": "Synset('have.v.17')", "definition": "achieve a point or goal", "lemma_names": ["have", "get", "make"], "_examples": ["Nicklaus had a 70", "The Brazilian team got 4 goals", "She made 29 points that day"]}, {"lemma": "get", "synset": "Synset('induce.v.02')", "definition": "cause to do; cause to act in a specified manner", "lemma_names": ["induce", "stimulate", "cause", "have", "get", "make"], "_examples": ["The ads induced me to buy a VCR", "My children finally got me to buy a computer", "My wife made me buy a new sofa"]}, {"lemma": "get", "synset": "Synset('get.v.11')", "definition": "succeed in catching or seizing, especially after a chase", "lemma_names": ["get", "catch", "capture"], "_examples": ["We finally got the suspect", "Did you catch the thief?"]}, {"lemma": "get", "synset": "Synset('grow.v.08')", "definition": "come to have or undergo a change of (physical features and attributes)", "lemma_names": ["grow", "develop", "produce", "get", "acquire"], "_examples": ["He grew a beard", "The patient developed abdominal pains", "I got funny spots all over my body", "Well-developed breasts"]}, {"lemma": "get", "synset": "Synset('contract.v.04')", "definition": "be stricken by an illness, fall victim to an illness", "lemma_names": ["contract", "take", "get"], "_examples": ["He got AIDS", "She came down with pneumonia", "She took a chill"]}, {"lemma": "get", "synset": "Synset('get.v.14')", "definition": "communicate with a place or person; establish communication with, as if by telephone", "lemma_names": ["get"], "_examples": ["Bill called this number and he got Mary", "The operator couldn't get Kobe because of the earthquake"]}, {"lemma": "get", "synset": "Synset('make.v.02')", "definition": "give certain properties to something", "lemma_names": ["make", "get"], "_examples": ["get someone mad", "She made us look silly", "He made a fool of himself at the meeting", "Don't make this into a big deal", "This invention will make you a millionaire", "Make yourself clear"]}, {"lemma": "get", "synset": "Synset('drive.v.11')", "definition": "move into a desired direction of discourse", "lemma_names": ["drive", "get", "aim"], "_examples": ["What are you driving at?"]}, {"lemma": "get", "synset": "Synset('catch.v.18')", "definition": "grasp with the mind or develop an understanding of", "lemma_names": ["catch", "get"], "_examples": ["did you catch that allusion?", "We caught something of his theory in the lecture", "don't catch your meaning", "did you get it?", "She didn't get the joke", "I just don't get him"]}, {"lemma": "get", "synset": "Synset('catch.v.07')", "definition": "attract and fix", "lemma_names": ["catch", "arrest", "get"], "_examples": ["His look caught her", "She caught his eye", "Catch the attention of the waiter"]}, {"lemma": "get", "synset": "Synset('get.v.19')", "definition": "reach with a blow or hit in a particular spot", "lemma_names": ["get", "catch"], "_examples": ["the rock caught her in the back of the head", "The blow got him in the back", "The punch caught him in the stomach"]}, {"lemma": "get", "synset": "Synset('get.v.20')", "definition": "reach by calculation", "lemma_names": ["get"], "_examples": ["What do you get when you add up these numbers?"]}, {"lemma": "get", "synset": "Synset('get.v.21')", "definition": "acquire as a result of some effort or action", "lemma_names": ["get"], "_examples": ["You cannot get water out of a stone", "Where did she get these news?"]}, {"lemma": "get", "synset": "Synset('get.v.22')", "definition": "purchase", "lemma_names": ["get"], "_examples": ["What did you get at the toy store?"]}, {"lemma": "get", "synset": "Synset('catch.v.21')", "definition": "perceive by hearing", "lemma_names": ["catch", "get"], "_examples": ["I didn't catch your name", "She didn't get his name when they met the first time"]}, {"lemma": "get", "synset": "Synset('catch.v.22')", "definition": "suffer from the receipt of", "lemma_names": ["catch", "get"], "_examples": ["She will catch hell for this behavior!"]}, {"lemma": "get", "synset": "Synset('get.v.25')", "definition": "receive as a retribution or punishment", "lemma_names": ["get", "receive"], "_examples": ["He got 5 years in prison"]}, {"lemma": "get", "synset": "Synset('scram.v.01')", "definition": "leave immediately; used usually in the imperative form", "lemma_names": ["scram", "buzz_off", "fuck_off", "get", "bugger_off"], "_examples": ["Scram!"]}, {"lemma": "get", "synset": "Synset('get.v.27')", "definition": "reach and board", "lemma_names": ["get"], "_examples": ["She got the bus just as it was leaving"]}, {"lemma": "get", "synset": "Synset('get.v.28')", "definition": "irritate", "lemma_names": ["get", "get_under_one's_skin"], "_examples": ["Her childish behavior really get to me", "His lying really gets me"]}, {"lemma": "get", "synset": "Synset('get.v.29')", "definition": "evoke an emotional response", "lemma_names": ["get"], "_examples": ["Brahms's `Requiem' gets me every time"]}, {"lemma": "get", "synset": "Synset('catch.v.24')", "definition": "apprehend and reproduce accurately", "lemma_names": ["catch", "get"], "_examples": ["She really caught the spirit of the place in her drawings", "She got the mood just right in her photographs"]}, {"lemma": "get", "synset": "Synset('draw.v.15')", "definition": "earn or achieve a base by being walked by the pitcher", "lemma_names": ["draw", "get"], "_examples": ["He drew a base on balls"]}, {"lemma": "get", "synset": "Synset('get.v.32')", "definition": "overcome or destroy", "lemma_names": ["get"], "_examples": ["The ice storm got my hibiscus", "the cat got the goldfish"]}, {"lemma": "get", "synset": "Synset('perplex.v.01')", "definition": "be a mystery or bewildering to", "lemma_names": ["perplex", "vex", "stick", "get", "puzzle", "mystify", "baffle", "beat", "pose", "bewilder", "flummox", "stupefy", "nonplus", "gravel", "amaze", "dumbfound"], "_examples": ["This beats me!", "Got me--I don't know the answer!", "a vexing problem", "This question really stuck me"]}, {"lemma": "get", "synset": "Synset('get_down.v.07')", "definition": "take the first step or steps in carrying out an action", "lemma_names": ["get_down", "begin", "get", "start_out", "start", "set_about", "set_out", "commence"], "_examples": ["We began working at dawn", "Who will start?", "Get working as soon as the sun rises!", "The first tourists began to arrive in Cambodia", "He began early in the day", "Let's get down to work now"]}, {"lemma": "get", "synset": "Synset('suffer.v.02')", "definition": "undergo (as of injuries and illnesses)", "lemma_names": ["suffer", "sustain", "have", "get"], "_examples": ["She suffered a fracture in the accident", "He had an insulin shock after eating three candy bars", "She got a bruise on her leg", "He got his arm broken in the scuffle"]}, {"lemma": "get", "synset": "Synset('beget.v.01')", "definition": "make children", "lemma_names": ["beget", "get", "engender", "father", "mother", "sire", "generate", "bring_forth"], "_examples": ["Abraham begot Isaac", "Men often father children but don't recognize them"]}]}, "characters": ["", "", "", "", "", "", "", "", "", "", "", "Rachel", "", "", "", "Rachel", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "Rachel", "", "", "", ""], "sid": "9-2", "origin_sent": "Well, let's see, the FICA guys took all my money, everyone I know is either getting married, or getting promoted, or getting pregnant, and I'm getting coffee!", "triple": {"sbj": "Rachel", "rel": "be get", "obj": "coffee"}, "intention": ["or", "getting", "pregnant", "and"]}, {"speaker": "Rachel", "tokens": [{"index": 1, "word": "So", "originalText": "So", "lemma": "so", "characterOffsetBegin": 0, "characterOffsetEnd": 2, "pos": "RB", "before": "", "after": " "}, {"index": 2, "word": "if", "originalText": "if", "lemma": "if", "characterOffsetBegin": 3, "characterOffsetEnd": 5, "pos": "IN", "before": " ", "after": " "}, {"index": 3, "word": "that", "originalText": "that", "lemma": "that", "characterOffsetBegin": 6, "characterOffsetEnd": 10, "pos": "DT", "before": " ", "after": " "}, {"index": 4, "word": "sounds", "originalText": "sounds", "lemma": "sound", "characterOffsetBegin": 11, "characterOffsetEnd": 17, "pos": "VBZ", "before": " ", "after": " "}, {"index": 5, "word": "like", "originalText": "like", "lemma": "like", "characterOffsetBegin": 18, "characterOffsetEnd": 22, "pos": "IN", "before": " ", "after": " "}, {"index": 6, "word": "I", "originalText": "I", "lemma": "I", "characterOffsetBegin": 23, "characterOffsetEnd": 24, "pos": "PRP", "before": " ", "after": ""}, {"index": 7, "word": "'m", "originalText": "'m", "lemma": "be", "characterOffsetBegin": 24, "characterOffsetEnd": 26, "pos": "VBP", "before": "", "after": " "}, {"index": 8, "word": "okay", "originalText": "okay", "lemma": "okay", "characterOffsetBegin": 27, "characterOffsetEnd": 31, "pos": "JJ", "before": " ", "after": ""}, {"index": 9, "word": ",", "originalText": ",", "lemma": ",", "characterOffsetBegin": 31, "characterOffsetEnd": 32, "pos": ",", "before": "", "after": " "}, {"index": 10, "word": "okay", "originalText": "okay", "lemma": "okay", "characterOffsetBegin": 33, "characterOffsetEnd": 37, "pos": "JJ", "before": " ", "after": ""}, {"index": 11, "word": ",", "originalText": ",", "lemma": ",", "characterOffsetBegin": 37, "characterOffsetEnd": 38, "pos": ",", "before": "", "after": " "}, {"index": 12, "word": "then", "originalText": "then", "lemma": "then", "characterOffsetBegin": 39, "characterOffsetEnd": 43, "pos": "RB", "before": " ", "after": " "}, {"index": 13, "word": "you", "originalText": "you", "lemma": "you", "characterOffsetBegin": 44, "characterOffsetEnd": 47, "pos": "PRP", "before": " ", "after": " "}, {"index": 14, "word": "can", "originalText": "can", "lemma": "can", "characterOffsetBegin": 48, "characterOffsetEnd": 51, "pos": "MD", "before": " ", "after": " "}, {"index": 15, "word": "tell", "originalText": "tell", "lemma": "tell", "characterOffsetBegin": 52, "characterOffsetEnd": 56, "pos": "VB", "before": " ", "after": " "}, {"index": 16, "word": "them", "originalText": "them", "lemma": "they", "characterOffsetBegin": 57, "characterOffsetEnd": 61, "pos": "PRP", "before": " ", "after": " "}, {"index": 17, "word": "I", "originalText": "I", "lemma": "I", "characterOffsetBegin": 62, "characterOffsetEnd": 63, "pos": "PRP", "before": " ", "after": ""}, {"index": 18, "word": "'m", "originalText": "'m", "lemma": "be", "characterOffsetBegin": 63, "characterOffsetEnd": 65, "pos": "VBP", "before": "", "after": " "}, {"index": 19, "word": "okay", "originalText": "okay", "lemma": "okay", "characterOffsetBegin": 66, "characterOffsetEnd": 70, "pos": "JJ", "before": " ", "after": ""}, {"index": 20, "word": ",", "originalText": ",", "lemma": ",", "characterOffsetBegin": 70, "characterOffsetEnd": 71, "pos": ",", "before": "", "after": " "}, {"index": 21, "word": "okay", "originalText": "okay", "lemma": "okay", "characterOffsetBegin": 72, "characterOffsetEnd": 76, "pos": "JJ", "before": " ", "after": ""}, {"index": 22, "word": "?", "originalText": "?", "lemma": "?", "characterOffsetBegin": 76, "characterOffsetEnd": 77, "pos": ".", "before": "", "after": ""}], "ext_links": {"frame": ["tell", "Becoming_aware", "Evidence", "Prevarication", "Request", "Speak_on_topic", "Statement", "Telling"], "synsets": [{"lemma": "tell", "synset": "Synset('state.v.01')", "definition": "express in words", "lemma_names": ["state", "say", "tell"], "_examples": ["He said that he wanted to marry her", "tell me what is bothering you", "state your opinion", "state your name"]}, {"lemma": "tell", "synset": "Synset('tell.v.02')", "definition": "let something be known", "lemma_names": ["tell"], "_examples": ["Tell them that you will be late"]}, {"lemma": "tell", "synset": "Synset('tell.v.03')", "definition": "narrate or give a detailed account of", "lemma_names": ["tell", "narrate", "recount", "recite"], "_examples": ["Tell what happened", "The father told a story to his child"]}, {"lemma": "tell", "synset": "Synset('order.v.01')", "definition": "give instructions to or direct somebody to do something with authority", "lemma_names": ["order", "tell", "enjoin", "say"], "_examples": ["I said to him to go home", "She ordered him to do the shopping", "The mother told the child to get dressed"]}, {"lemma": "tell", "synset": "Synset('tell.v.05')", "definition": "discern or comprehend", "lemma_names": ["tell"], "_examples": ["He could tell that she was unhappy"]}, {"lemma": "tell", "synset": "Synset('assure.v.02')", "definition": "inform positively and with certainty and confidence", "lemma_names": ["assure", "tell"], "_examples": ["I tell you that man is a crook!"]}, {"lemma": "tell", "synset": "Synset('tell.v.07')", "definition": "give evidence", "lemma_names": ["tell", "evidence"], "_examples": ["he was telling on all his former colleague"]}, {"lemma": "tell", "synset": "Synset('distinguish.v.01')", "definition": "mark as different", "lemma_names": ["distinguish", "separate", "differentiate", "secern", "secernate", "severalize", "severalise", "tell", "tell_apart"], "_examples": ["We distinguish several kinds of maple"]}]}, "characters": ["", "", "", "", "", "Rachel", "", "", "", "", "", "", "Monica", "", "", "", "Rachel", "", "", "", "", ""], "sid": "9-4", "origin_sent": "So if that sounds like I'm okay, okay, then you can tell them I'm okay, okay?", "triple": {"sbj": "Monica", "rel": "tell", "obj": "them"}, "intention": ["okay", "okay", "then", "can", "I", "'m", "okay", "okay"]}]}